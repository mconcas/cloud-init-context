#!/bin/bash

#
# delete-offline-node -- by Dario Berzano <dario.berzano@cern.ch>
#
# Script meant to be run on the CE by an unprivileged user to delete a node
# passed on stdin from the list of active nodes, or to set it offline; SSH keys
# for the node are removed as well.
#
# Symlinking to delete-node or offline-node sets operation mode.
#
# This script is primarily invoked remotely by onevm-wn-drain.rb.
#
# The unprivileged user should have the right to create and delete nodes:
#
#   qmgr -c 'set server managers += unpriv_user@ce.host.com'
#
# This script is meant to be the only allowed command of a SSH public key of the
# unprivileged user.
#
# In addition the same user must have the right to run ssh-hosts-keys from the
# same directory of this very script as root via sudo, so edit sudoers properly,
# for instance:
#
#   qmanager  ALL = NOPASSWD: /full/path/to/ssh-hosts-keys
#

#
# Functions
#

# Main function
function Main() {

  # Read WN name
  read NodeName

  # Delete or set offline?
  Base=`basename "$0"`

  if [ "$Base" == 'delete-node' ] ; then

    # Remove node from queues, if exists; ignore error value
    qmgr -c "delete node $NodeName"

    # Invoke script to manage keys (it should feature a lock/wait mechanism)
    local ScriptDir=`dirname $0`
    ScriptDir=`cd "$ScriptDir" ; pwd`
    sudo "$ScriptDir/ssh-hosts-keys" delete $NodeName

  elif [ "$Base" == 'offline-node' ] ; then

    # Set node offline
    pbsnodes -o $NodeName

  else
    echo "Symlink $0 to delete-node or offline-node to decide operation" >&2
    exit 1
  fi

}

#
# Entry point
#

Main "$@"
